Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: %empty
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement
   19          | for_statement

   20 @3: %empty

   21 $@4: %empty

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

   23 compound_statement: _LBRACKET statement_list _RBRACKET

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   25 num_exp: exp
   26        | num_exp _AROP exp

   27 exp: literal
   28    | _ID
   29    | function_call
   30    | _LPAREN num_exp _RPAREN

   31 literal: _INT_NUMBER
   32        | _UINT_NUMBER

   33 $@5: %empty

   34 function_call: _ID $@5 _LPAREN argument _RPAREN

   35 argument: %empty
   36         | num_exp

   37 if_statement: if_part
   38             | if_part _ELSE statement

   39 @6: %empty

   40 $@7: %empty

   41 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement

   42 rel_exp: num_exp _RELOP num_exp

   43 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12
_IF (259) 41
_ELSE (260) 38
_RETURN (261) 43
_ID (262) 5 7 12 22 24 28 34
_INT_NUMBER (263) 31
_UINT_NUMBER (264) 32
_LPAREN (265) 5 22 30 34 41
_RPAREN (266) 5 22 30 34 41
_LBRACKET (267) 9 23
_RBRACKET (268) 9 23
_ASSIGN (269) 22 24
_SEMICOLON (270) 12 22 24 43
_INC (271) 22
_AROP (272) 26
_RELOP (273) 42
_FOR (274) 22
ONLY_IF (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
function_list (23)
    on left: 2 3, on right: 1 3
function (24)
    on left: 5, on right: 2 3
$@1 (25)
    on left: 4, on right: 5
parameter (26)
    on left: 6 7, on right: 5
body (27)
    on left: 9, on right: 5
$@2 (28)
    on left: 8, on right: 9
variable_list (29)
    on left: 10 11, on right: 9 11
variable (30)
    on left: 12, on right: 11
statement_list (31)
    on left: 13 14, on right: 9 14 23
statement (32)
    on left: 15 16 17 18 19, on right: 14 22 38 41
for_statement (33)
    on left: 22, on right: 19
@3 (34)
    on left: 20, on right: 22
$@4 (35)
    on left: 21, on right: 22
compound_statement (36)
    on left: 23, on right: 15
assignment_statement (37)
    on left: 24, on right: 16
num_exp (38)
    on left: 25 26, on right: 24 26 30 36 42 43
exp (39)
    on left: 27 28 29 30, on right: 25 26
literal (40)
    on left: 31 32, on right: 22 27
function_call (41)
    on left: 34, on right: 29
$@5 (42)
    on left: 33, on right: 34
argument (43)
    on left: 35 36, on right: 34
if_statement (44)
    on left: 37 38, on right: 17
if_part (45)
    on left: 41, on right: 37 38
@6 (46)
    on left: 39, on right: 41
$@7 (47)
    on left: 40, on right: 41
rel_exp (48)
    on left: 42, on right: 22 41
return_statement (49)
    on left: 43, on right: 18


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   14 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 29
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   41 if_part: _IF . _LPAREN @6 rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 36


State 24

   43 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 41
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 25

   24 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 45


State 26

   23 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 46


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 28

   22 for_statement: _FOR . _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _LPAREN  shift, and go to state 47


State 29

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 30

   19 statement: for_statement .

    $default  reduce using rule 19 (statement)


State 31

   15 statement: compound_statement .

    $default  reduce using rule 15 (statement)


State 32

   16 statement: assignment_statement .

    $default  reduce using rule 16 (statement)


State 33

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 34

   37 if_statement: if_part .
   38             | if_part . _ELSE statement

    _ELSE  shift, and go to state 48

    $default  reduce using rule 37 (if_statement)


State 35

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 36

   41 if_part: _IF _LPAREN . @6 rel_exp $@7 _RPAREN statement

    $default  reduce using rule 39 (@6)

    @6  go to state 49


State 37

   28 exp: _ID .
   34 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 33 ($@5)
    $default  reduce using rule 28 (exp)

    $@5  go to state 50


State 38

   31 literal: _INT_NUMBER .

    $default  reduce using rule 31 (literal)


State 39

   32 literal: _UINT_NUMBER .

    $default  reduce using rule 32 (literal)


State 40

   30 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 51
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 41

   26 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 52
    _AROP       shift, and go to state 53


State 42

   25 num_exp: exp .

    $default  reduce using rule 25 (num_exp)


State 43

   27 exp: literal .

    $default  reduce using rule 27 (exp)


State 44

   29 exp: function_call .

    $default  reduce using rule 29 (exp)


State 45

   24 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 54
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 46

   14 statement_list: statement_list . statement
   23 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 55
    _FOR       shift, and go to state 28

    statement             go to state 29
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 47

   22 for_statement: _FOR _LPAREN . _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _ID  shift, and go to state 56


State 48

   38 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28

    statement             go to state 57
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 49

   41 if_part: _IF _LPAREN @6 . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 58
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44
    rel_exp        go to state 59


State 50

   34 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 60


State 51

   26 num_exp: num_exp . _AROP exp
   30 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 61
    _AROP    shift, and go to state 53


State 52

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 53

   26 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    exp            go to state 62
    literal        go to state 43
    function_call  go to state 44


State 54

   24 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   26 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 53


State 55

   23 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 23 (compound_statement)


State 56

   22 for_statement: _FOR _LPAREN _ID . _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _ASSIGN  shift, and go to state 64


State 57

   38 if_statement: if_part _ELSE statement .

    $default  reduce using rule 38 (if_statement)


State 58

   26 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 53
    _RELOP  shift, and go to state 65


State 59

   41 if_part: _IF _LPAREN @6 rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 40 ($@7)

    $@7  go to state 66


State 60

   34 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    $default  reduce using rule 35 (argument)

    num_exp        go to state 67
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44
    argument       go to state 68


State 61

   30 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 30 (exp)


State 62

   26 num_exp: num_exp _AROP exp .

    $default  reduce using rule 26 (num_exp)


State 63

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 24 (assignment_statement)


State 64

   22 for_statement: _FOR _LPAREN _ID _ASSIGN . literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39

    literal  go to state 69


State 65

   42 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 70
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 66

   41 if_part: _IF _LPAREN @6 rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 71


State 67

   26 num_exp: num_exp . _AROP exp
   36 argument: num_exp .

    _AROP  shift, and go to state 53

    $default  reduce using rule 36 (argument)


State 68

   34 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 72


State 69

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal . @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    $default  reduce using rule 20 (@3)

    @3  go to state 73


State 70

   26 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 53

    $default  reduce using rule 42 (rel_exp)


State 71

   41 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28

    statement             go to state 74
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 72

   34 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 34 (function_call)


State 73

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 . _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 75


State 74

   41 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 41 (if_part)


State 75

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON . rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 58
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44
    rel_exp        go to state 76


State 76

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp . _SEMICOLON _ID $@4 _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 77


State 77

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON . _ID $@4 _INC _RPAREN statement

    _ID  shift, and go to state 78


State 78

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID . $@4 _INC _RPAREN statement

    $default  reduce using rule 21 ($@4)

    $@4  go to state 79


State 79

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 . _INC _RPAREN statement

    _INC  shift, and go to state 80


State 80

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC . _RPAREN statement

    _RPAREN  shift, and go to state 81


State 81

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28

    statement             go to state 82
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 82

   22 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp _SEMICOLON _ID $@4 _INC _RPAREN statement .

    $default  reduce using rule 22 (for_statement)
