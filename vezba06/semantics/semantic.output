Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variables

   11 $@2: %empty

   12 variables: _TYPE $@2 id_list _SEMICOLON

   13 id_list: _ID
   14        | id_list _COMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | do_statement
   22          | switch_statement
   23          | for_statement

   24 $@3: %empty

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

   26 case_statements: case_statement
   27                | case_statements case_statement

   28 $@4: %empty

   29 case_statement: _CASE literal $@4 _COLON statement break_statement

   30 break_statement: %empty
   31                | _BREAK _SEMICOLON

   32 default_statement: %empty
   33                  | _DEFAULT _COLON statement

   34 @5: %empty

   35 $@6: %empty

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

   37 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   38 @7: %empty

   39 compound_statement: _LBRACKET @7 variable_list statement_list _RBRACKET

   40 assignment_statement: assigns num_exp _SEMICOLON

   41 assigns: _ID _ASSIGN
   42        | assigns _ID _ASSIGN

   43 num_exp: exp
   44        | num_exp _AROP exp

   45 exp: literal
   46    | _ID
   47    | _ID _PLUSPLUS
   48    | function_call
   49    | _LPAREN num_exp _RPAREN

   50 literal: _INT_NUMBER
   51        | _UINT_NUMBER

   52 $@8: %empty

   53 function_call: _ID $@8 _LPAREN argument _RPAREN

   54 argument: %empty
   55         | num_exp

   56 if_statement: if_part
   57             | if_part _ELSE statement

   58 if_part: _IF _LPAREN rel_exp _RPAREN statement

   59 rel_exp: num_exp _RELOP num_exp

   60 return_statement: _RETURN num_exp _SEMICOLON
   61                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12 36
_IF (259) 58
_ELSE (260) 57
_RETURN (261) 60 61
_ID (262) 5 7 13 14 25 36 37 41 42 46 47 53
_INT_NUMBER (263) 50
_UINT_NUMBER (264) 51
_LPAREN (265) 5 25 36 37 49 53 58
_RPAREN (266) 5 25 36 37 49 53 58
_LBRACKET (267) 8 25 39
_RBRACKET (268) 8 25 39
_ASSIGN (269) 36 41 42
_SEMICOLON (270) 12 31 36 37 40 60 61
_AROP (271) 44
_RELOP (272) 37 59
_PLUSPLUS (273) 36 47
_COMA (274) 14
_SWITCH (275) 25
_CASE (276) 29
_DEFAULT (277) 33
_BREAK (278) 31
_COLON (279) 29 33
_DO (280) 37
_FOR (281) 36
_WHILE (282) 37
ONLY_IF (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
program (30)
    on left: 1, on right: 0
function_list (31)
    on left: 2 3, on right: 1 3
function (32)
    on left: 5, on right: 2 3
$@1 (33)
    on left: 4, on right: 5
parameter (34)
    on left: 6 7, on right: 5
body (35)
    on left: 8, on right: 5
variable_list (36)
    on left: 9 10, on right: 8 10 39
variables (37)
    on left: 12, on right: 10
$@2 (38)
    on left: 11, on right: 12
id_list (39)
    on left: 13 14, on right: 12 14
statement_list (40)
    on left: 15 16, on right: 8 16 39
statement (41)
    on left: 17 18 19 20 21 22 23, on right: 16 29 33 36 37 57 58
switch_statement (42)
    on left: 25, on right: 22
$@3 (43)
    on left: 24, on right: 25
case_statements (44)
    on left: 26 27, on right: 25 27
case_statement (45)
    on left: 29, on right: 26 27
$@4 (46)
    on left: 28, on right: 29
break_statement (47)
    on left: 30 31, on right: 29
default_statement (48)
    on left: 32 33, on right: 25
for_statement (49)
    on left: 36, on right: 23
@5 (50)
    on left: 34, on right: 36
$@6 (51)
    on left: 35, on right: 36
do_statement (52)
    on left: 37, on right: 21
compound_statement (53)
    on left: 39, on right: 17
@7 (54)
    on left: 38, on right: 39
assignment_statement (55)
    on left: 40, on right: 18
assigns (56)
    on left: 41 42, on right: 40 42
num_exp (57)
    on left: 43 44, on right: 40 44 49 55 59 60
exp (58)
    on left: 45 46 47 48 49, on right: 43 44
literal (59)
    on left: 50 51, on right: 29 36 37 45
function_call (60)
    on left: 53, on right: 48
$@8 (61)
    on left: 52, on right: 53
argument (62)
    on left: 54 55, on right: 53
if_statement (63)
    on left: 56 57, on right: 19
if_part (64)
    on left: 58, on right: 56 57
rel_exp (65)
    on left: 59, on right: 36 58
return_statement (66)
    on left: 60 61, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variables

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variables       go to state 18
    statement_list  go to state 19


State 17

   12 variables: _TYPE . $@2 id_list _SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variables .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 29
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 20

   12 variables: _TYPE $@2 . id_list _SEMICOLON

    _ID  shift, and go to state 39

    id_list  go to state 40


State 21

   58 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 41


State 22

   60 return_statement: _RETURN . num_exp _SEMICOLON
   61                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45
    _SEMICOLON    shift, and go to state 46

    num_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 23

   41 assigns: _ID . _ASSIGN

    _ASSIGN  shift, and go to state 51


State 24

   39 compound_statement: _LBRACKET . @7 variable_list statement_list _RBRACKET

    $default  reduce using rule 38 (@7)

    @7  go to state 52


State 25

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 26

   25 switch_statement: _SWITCH . _LPAREN _ID $@3 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _LPAREN  shift, and go to state 53


State 27

   37 do_statement: _DO . statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 54
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 28

   36 for_statement: _FOR . _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _LPAREN  shift, and go to state 55


State 29

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 30

   22 statement: switch_statement .

    $default  reduce using rule 22 (statement)


State 31

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 32

   21 statement: do_statement .

    $default  reduce using rule 21 (statement)


State 33

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 34

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 35

   40 assignment_statement: assigns . num_exp _SEMICOLON
   42 assigns: assigns . _ID _ASSIGN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 57
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 36

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 37

   56 if_statement: if_part .
   57             | if_part . _ELSE statement

    _ELSE  shift, and go to state 58

    $default  reduce using rule 56 (if_statement)


State 38

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 39

   13 id_list: _ID .

    $default  reduce using rule 13 (id_list)


State 40

   12 variables: _TYPE $@2 id_list . _SEMICOLON
   14 id_list: id_list . _COMA _ID

    _SEMICOLON  shift, and go to state 59
    _COMA       shift, and go to state 60


State 41

   58 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 61
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 62


State 42

   46 exp: _ID .
   47    | _ID . _PLUSPLUS
   53 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 63

    _LPAREN   reduce using rule 52 ($@8)
    $default  reduce using rule 46 (exp)

    $@8  go to state 64


State 43

   50 literal: _INT_NUMBER .

    $default  reduce using rule 50 (literal)


State 44

   51 literal: _UINT_NUMBER .

    $default  reduce using rule 51 (literal)


State 45

   49 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 65
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 46

   61 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 61 (return_statement)


State 47

   44 num_exp: num_exp . _AROP exp
   60 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 67


State 48

   43 num_exp: exp .

    $default  reduce using rule 43 (num_exp)


State 49

   45 exp: literal .

    $default  reduce using rule 45 (exp)


State 50

   48 exp: function_call .

    $default  reduce using rule 48 (exp)


State 51

   41 assigns: _ID _ASSIGN .

    $default  reduce using rule 41 (assigns)


State 52

   39 compound_statement: _LBRACKET @7 . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 68


State 53

   25 switch_statement: _SWITCH _LPAREN . _ID $@3 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _ID  shift, and go to state 69


State 54

   37 do_statement: _DO statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 70


State 55

   36 for_statement: _FOR _LPAREN . _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _TYPE  shift, and go to state 71


State 56

   42 assigns: assigns _ID . _ASSIGN
   46 exp: _ID .
   47    | _ID . _PLUSPLUS
   53 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _ASSIGN    shift, and go to state 72
    _PLUSPLUS  shift, and go to state 63

    _LPAREN   reduce using rule 52 ($@8)
    $default  reduce using rule 46 (exp)

    $@8  go to state 64


State 57

   40 assignment_statement: assigns num_exp . _SEMICOLON
   44 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 73
    _AROP       shift, and go to state 67


State 58

   57 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 74
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 59

   12 variables: _TYPE $@2 id_list _SEMICOLON .

    $default  reduce using rule 12 (variables)


State 60

   14 id_list: id_list _COMA . _ID

    _ID  shift, and go to state 75


State 61

   44 num_exp: num_exp . _AROP exp
   59 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 67
    _RELOP  shift, and go to state 76


State 62

   58 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 77


State 63

   47 exp: _ID _PLUSPLUS .

    $default  reduce using rule 47 (exp)


State 64

   53 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 78


State 65

   44 num_exp: num_exp . _AROP exp
   49 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 79
    _AROP    shift, and go to state 67


State 66

   60 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 67

   44 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    exp            go to state 80
    literal        go to state 49
    function_call  go to state 50


State 68

   10 variable_list: variable_list . variables
   39 compound_statement: _LBRACKET @7 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variables       go to state 18
    statement_list  go to state 81


State 69

   25 switch_statement: _SWITCH _LPAREN _ID . $@3 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    $default  reduce using rule 24 ($@3)

    $@3  go to state 82


State 70

   37 do_statement: _DO statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 83


State 71

   36 for_statement: _FOR _LPAREN _TYPE . _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _ID  shift, and go to state 84


State 72

   42 assigns: assigns _ID _ASSIGN .

    $default  reduce using rule 42 (assigns)


State 73

   40 assignment_statement: assigns num_exp _SEMICOLON .

    $default  reduce using rule 40 (assignment_statement)


State 74

   57 if_statement: if_part _ELSE statement .

    $default  reduce using rule 57 (if_statement)


State 75

   14 id_list: id_list _COMA _ID .

    $default  reduce using rule 14 (id_list)


State 76

   59 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 85
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 77

   58 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 86
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 78

   53 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    $default  reduce using rule 54 (argument)

    num_exp        go to state 87
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    argument       go to state 88


State 79

   49 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 49 (exp)


State 80

   44 num_exp: num_exp _AROP exp .

    $default  reduce using rule 44 (num_exp)


State 81

   16 statement_list: statement_list . statement
   39 compound_statement: _LBRACKET @7 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 89
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 29
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 82

   25 switch_statement: _SWITCH _LPAREN _ID $@3 . _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _RPAREN  shift, and go to state 90


State 83

   37 do_statement: _DO statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 91


State 84

   36 for_statement: _FOR _LPAREN _TYPE _ID . _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _ASSIGN  shift, and go to state 92


State 85

   44 num_exp: num_exp . _AROP exp
   59 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 59 (rel_exp)


State 86

   58 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 58 (if_part)


State 87

   44 num_exp: num_exp . _AROP exp
   55 argument: num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 55 (argument)


State 88

   53 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 93


State 89

   39 compound_statement: _LBRACKET @7 variable_list statement_list _RBRACKET .

    $default  reduce using rule 39 (compound_statement)


State 90

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN . _LBRACKET case_statements default_statement _RBRACKET

    _LBRACKET  shift, and go to state 94


State 91

   37 do_statement: _DO statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 95


State 92

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN . literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44

    literal  go to state 96


State 93

   53 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 53 (function_call)


State 94

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET . case_statements default_statement _RBRACKET

    _CASE  shift, and go to state 97

    case_statements  go to state 98
    case_statement   go to state 99


State 95

   37 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44

    literal  go to state 100


State 96

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal . @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    $default  reduce using rule 34 (@5)

    @5  go to state 101


State 97

   29 case_statement: _CASE . literal $@4 _COLON statement break_statement

    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44

    literal  go to state 102


State 98

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET case_statements . default_statement _RBRACKET
   27 case_statements: case_statements . case_statement

    _CASE     shift, and go to state 97
    _DEFAULT  shift, and go to state 103

    $default  reduce using rule 32 (default_statement)

    case_statement     go to state 104
    default_statement  go to state 105


State 99

   26 case_statements: case_statement .

    $default  reduce using rule 26 (case_statements)


State 100

   37 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 106


State 101

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 . _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _SEMICOLON  shift, and go to state 107


State 102

   29 case_statement: _CASE literal . $@4 _COLON statement break_statement

    $default  reduce using rule 28 ($@4)

    $@4  go to state 108


State 103

   33 default_statement: _DEFAULT . _COLON statement

    _COLON  shift, and go to state 109


State 104

   27 case_statements: case_statements case_statement .

    $default  reduce using rule 27 (case_statements)


State 105

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET case_statements default_statement . _RBRACKET

    _RBRACKET  shift, and go to state 110


State 106

   37 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 111


State 107

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON . rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 61
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 112


State 108

   29 case_statement: _CASE literal $@4 . _COLON statement break_statement

    _COLON  shift, and go to state 113


State 109

   33 default_statement: _DEFAULT _COLON . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 114
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 110

   25 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET case_statements default_statement _RBRACKET .

    $default  reduce using rule 25 (switch_statement)


State 111

   37 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 37 (do_statement)


State 112

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp . _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement

    _SEMICOLON  shift, and go to state 115


State 113

   29 case_statement: _CASE literal $@4 _COLON . statement break_statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 116
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 114

   33 default_statement: _DEFAULT _COLON statement .

    $default  reduce using rule 33 (default_statement)


State 115

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON . _ID _PLUSPLUS $@6 _RPAREN statement

    _ID  shift, and go to state 117


State 116

   29 case_statement: _CASE literal $@4 _COLON statement . break_statement

    _BREAK  shift, and go to state 118

    $default  reduce using rule 30 (break_statement)

    break_statement  go to state 119


State 117

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID . _PLUSPLUS $@6 _RPAREN statement

    _PLUSPLUS  shift, and go to state 120


State 118

   31 break_statement: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 121


State 119

   29 case_statement: _CASE literal $@4 _COLON statement break_statement .

    $default  reduce using rule 29 (case_statement)


State 120

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS . $@6 _RPAREN statement

    $default  reduce using rule 35 ($@6)

    $@6  go to state 122


State 121

   31 break_statement: _BREAK _SEMICOLON .

    $default  reduce using rule 31 (break_statement)


State 122

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 . _RPAREN statement

    _RPAREN  shift, and go to state 123


State 123

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SWITCH    shift, and go to state 26
    _DO        shift, and go to state 27
    _FOR       shift, and go to state 28

    statement             go to state 124
    switch_statement      go to state 30
    for_statement         go to state 31
    do_statement          go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    assigns               go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 124

   36 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal @5 _SEMICOLON rel_exp _SEMICOLON _ID _PLUSPLUS $@6 _RPAREN statement .

    $default  reduce using rule 36 (for_statement)
